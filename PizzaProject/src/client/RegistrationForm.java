/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package client;


import com.google.common.hash.Hashing;
import commonClasses.Address;
import commonClasses.User;
import java.nio.charset.StandardCharsets;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author PC
 */
public class RegistrationForm extends javax.swing.JDialog {

        boolean nameErrors = false;
        boolean surnameErrors = false;
        boolean phoneErrors = false;
        boolean streetErrors = false;
        boolean houseErrors = false;
        boolean cityErrors = false;
        boolean areaErrors = false;
        boolean emailErrors = false;
        boolean passwordErrors = false;
        boolean confirmPasswordErrors = false;
        PizzaClient pizzaClient;
        
       
    /**
     * Creates new form RegistrationForm
     */
    public RegistrationForm(java.awt.Frame parent, boolean modal,PizzaClient pizzaClient) {
        super(parent, modal);
        this.pizzaClient = pizzaClient;
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nameText = new javax.swing.JTextField();
        surnameText = new javax.swing.JTextField();
        phnumberText = new javax.swing.JTextField();
        streetText = new javax.swing.JTextField();
        houseText = new javax.swing.JTextField();
        cityText = new javax.swing.JTextField();
        areaCodeText = new javax.swing.JTextField();
        emailText = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        confirmPasswordText = new javax.swing.JPasswordField();
        passwordText = new javax.swing.JPasswordField();
        submitButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();
        nameValidationLabel = new javax.swing.JLabel();
        surnameValidationLabel = new javax.swing.JLabel();
        phoneValidationLabel = new javax.swing.JLabel();
        streetValidationLabel = new javax.swing.JLabel();
        houseValidationLabel = new javax.swing.JLabel();
        cityValidationLabel = new javax.swing.JLabel();
        areaValidationLabel = new javax.swing.JLabel();
        emailValidationLabel = new javax.swing.JLabel();
        passwordValidationLabel = new javax.swing.JLabel();
        confirmpasswordValidationLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        nameText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nameTextKeyReleased(evt);
            }
        });

        surnameText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                surnameTextKeyReleased(evt);
            }
        });

        phnumberText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                phnumberTextKeyReleased(evt);
            }
        });

        streetText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                streetTextKeyReleased(evt);
            }
        });

        houseText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                houseTextKeyReleased(evt);
            }
        });

        cityText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cityTextKeyReleased(evt);
            }
        });

        areaCodeText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                areaCodeTextKeyReleased(evt);
            }
        });

        emailText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                emailTextKeyReleased(evt);
            }
        });

        jLabel1.setText("Name:");

        jLabel2.setText("Surname:");

        jLabel3.setText("Phone number:");

        jLabel4.setText("Street name:");

        jLabel5.setText("House number:");

        jLabel6.setText("City name:");

        jLabel7.setText("Area code:");

        jLabel8.setText("Email address:");

        jLabel9.setText("Password:");

        jLabel10.setText("Confirm password:");

        confirmPasswordText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                confirmPasswordTextKeyReleased(evt);
            }
        });

        passwordText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                passwordTextKeyReleased(evt);
            }
        });

        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        nameValidationLabel.setForeground(new java.awt.Color(204, 0, 0));

        surnameValidationLabel.setForeground(new java.awt.Color(204, 0, 0));

        phoneValidationLabel.setForeground(new java.awt.Color(204, 0, 0));

        streetValidationLabel.setForeground(new java.awt.Color(204, 0, 0));

        houseValidationLabel.setForeground(new java.awt.Color(204, 0, 0));

        cityValidationLabel.setForeground(new java.awt.Color(204, 0, 0));

        areaValidationLabel.setForeground(new java.awt.Color(204, 0, 0));

        emailValidationLabel.setForeground(new java.awt.Color(204, 0, 0));

        passwordValidationLabel.setForeground(new java.awt.Color(204, 0, 0));

        confirmpasswordValidationLabel.setForeground(new java.awt.Color(204, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(submitButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(clearButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(closeButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nameText, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
                            .addComponent(surnameText, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
                            .addComponent(phnumberText, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
                            .addComponent(streetText, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
                            .addComponent(houseText, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
                            .addComponent(cityText, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
                            .addComponent(areaCodeText, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
                            .addComponent(emailText, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
                            .addComponent(confirmPasswordText)
                            .addComponent(passwordText))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nameValidationLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(surnameValidationLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(phoneValidationLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(streetValidationLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(houseValidationLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cityValidationLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(emailValidationLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(passwordValidationLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(confirmpasswordValidationLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(areaValidationLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)))))
                .addContainerGap(333, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel1, jLabel2, jLabel3, jLabel4, jLabel5, jLabel6, jLabel7, jLabel8, jLabel9});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {areaCodeText, cityText, emailText, houseText, nameText, phnumberText, streetText, surnameText});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(134, 134, 134)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                            .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(nameValidationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                            .addComponent(surnameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                    .addComponent(surnameValidationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(phnumberText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addComponent(phoneValidationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(streetText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(streetValidationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(houseText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(houseValidationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cityText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(cityValidationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(areaCodeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(areaValidationLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(emailValidationLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(emailText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(passwordValidationLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(passwordText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(confirmPasswordText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(confirmpasswordValidationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitButton)
                    .addComponent(clearButton)
                    .addComponent(closeButton))
                .addContainerGap(133, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel1, jLabel2, jLabel3, jLabel4, jLabel5, jLabel6, jLabel7, jLabel8, jLabel9});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {areaCodeText, cityText, emailText, houseText, nameText, phnumberText, streetText, surnameText});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
     
        String name = nameText.getText();
        String surname = surnameText.getText();
        String phone = phnumberText.getText();
        String street = streetText.getText();
        String house = houseText.getText();
        String city = cityText.getText();
        String area = areaCodeText.getText();
        String email = emailText.getText();
        String password = passwordText.getText();
        String confirmPassword = confirmPasswordText.getText();
        if (name.equals(""))
        {
            nameValidationLabel.setText("Name is Mandatory");
            nameErrors = true;
        }
         if (surname.equals(""))
        {
            surnameValidationLabel.setText("Surname is Mandatory");
            surnameErrors= true;
        }
         if (phone.equals(""))
        {
            phoneValidationLabel.setText("Phone number is Mandatory");
            phoneErrors= true;
        }
         if (street.equals(""))
        {
            streetValidationLabel.setText("Street is Mandatory");
            streetErrors= true;
        }
         if (house.equals(""))
        {
            houseValidationLabel.setText("House number is Mandatory");
            houseErrors= true;
        }
         if (city.equals(""))
        {
            cityValidationLabel.setText("City name is Mandatory");
            cityErrors= true;
        }
         if (area.equals(""))
        {
            areaValidationLabel.setText("Area code is Mandatory ");
            areaErrors= true;
        }
         if (email.equals(""))
        {
            emailValidationLabel.setText(" E-mail is Mandatory ");
            emailErrors= true;
        }
          if (password.equals(""))
        {
            passwordValidationLabel.setText(" Password is Mandatory ");
            passwordErrors= true;
        }
           if (confirmPassword.equals(""))
        {
            confirmpasswordValidationLabel.setText(" Confirm password is Mandatory ");
            confirmPasswordErrors= true;
        }
         if(nameErrors || surnameErrors ||  phoneErrors || streetErrors || houseErrors || cityErrors || areaErrors || emailErrors || passwordErrors || confirmPasswordErrors ){
             JOptionPane.showMessageDialog(null, "Please fix input error and submit again");
             return;
         }
         if(!password.equals(confirmPassword)){
               JOptionPane.showMessageDialog(null, "Passwords aren't equal");
               return;
         }
         
         User user =new User(0);
         Address address = new Address();
         address.setCityName(city);
         address.setAreaCode(area);
         address.setHouseNumber(house);
         address.setStreetName(street);
         address.setPhoneNumber(phone);
         user.setAddress(address);
         user.setEmail(email);
         user.setUserName(email);
         
         password = Hashing
        .sha256()
        .hashString(password, StandardCharsets.UTF_8)
        .toString()
        .toUpperCase();
         user.setPasswordHash(password);
         
       var result=   pizzaClient.Register(user);
       if(result.isSuccess()){
           JOptionPane.showMessageDialog(null, "Registration succesful");
           return;
       }
             JOptionPane.showMessageDialog(null, "Registration failed");
    }//GEN-LAST:event_submitButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
           nameText.setText(null);
        surnameText.setText(null);
         phnumberText.setText(null);
         streetText.setText(null);
        houseText.setText(null);
       cityText.setText(null);
         areaCodeText.setText(null);
         emailText.setText(null);
         passwordText.setText(null);
         confirmPasswordText.setText(null);
    }//GEN-LAST:event_clearButtonActionPerformed

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
       
        dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    private void nameTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameTextKeyReleased
      String PATTERN = "^[a-zA-Z]{3,30}$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match= patt.matcher(nameText.getText());
        if (!match.matches() || nameText.getText().equals("")){
            nameValidationLabel.setText("Naming is incorrect");
            nameErrors = true;
        }else{
            nameValidationLabel.setText(null);
               nameErrors = false;
        }

    }//GEN-LAST:event_nameTextKeyReleased

    private void surnameTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_surnameTextKeyReleased
      String PATTERN = "^[A-Za-z]+([ -][a-zA-Z]+)*";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match= patt.matcher(surnameText.getText());
        if (!match.matches()|| surnameText.getText().equals("")){
            surnameValidationLabel.setText("Surname is incorrect");
            surnameErrors =true;
        }else{
            surnameValidationLabel.setText(null);
               surnameErrors =false;
        }
    }//GEN-LAST:event_surnameTextKeyReleased

    private void phnumberTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_phnumberTextKeyReleased
       String PATTERN = "^[0-9]{9,10}$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match= patt.matcher(phnumberText.getText());
        String phone = phnumberText.getText().toString();
        if (!(match.matches() && RegistrationForm.isNumeric(phone) || phnumberText.getText().equals(""))){
            phoneValidationLabel.setText("Phone is incorrect");
            phoneErrors =true;
        }else{
            phoneValidationLabel.setText(null);
            phoneErrors =false;
        }
    }//GEN-LAST:event_phnumberTextKeyReleased

    private void streetTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_streetTextKeyReleased
           String PATTERN = "[A-Z][a-z]*";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match= patt.matcher(streetText.getText());
        if (!match.matches()|| streetText.getText().equals("")){
            streetValidationLabel.setText("Street name is incorrect");
            streetErrors =true;
        }else{
            streetValidationLabel.setText(null);
             streetErrors =false;
        }
    }//GEN-LAST:event_streetTextKeyReleased

    private void houseTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_houseTextKeyReleased
        String house = houseText.getText().toString();
        
         String PATTERN = "[0-9]+";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match= patt.matcher(houseText.getText());
        if (!(match.matches() && RegistrationForm.isNumeric(house)|| houseText.getText().equals(""))){
            houseValidationLabel.setText("House number is incorrect");
            houseErrors =true;
        }else{
            houseValidationLabel.setText(null);
            houseErrors  =false;
        }
    }//GEN-LAST:event_houseTextKeyReleased

    private void cityTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cityTextKeyReleased
         String PATTERN = "^([a-zA-Z]+|[a-zA-Z]+\s[a-zA-Z]+)$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match= patt.matcher(cityText.getText());
        if (!(match.matches() || cityText.getText().equals(""))){
            cityValidationLabel.setText("City name is incorrect");
            cityErrors = true;
        }else{
            cityValidationLabel.setText(null);
            cityErrors =false;
        }
    }//GEN-LAST:event_cityTextKeyReleased

    private void areaCodeTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_areaCodeTextKeyReleased
         String PATTERN = "[0-9][0-9]-[0-9][0-9][0-9]";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match= patt.matcher(areaCodeText.getText());
        if (!(match.matches()|| areaCodeText.getText().equals("") )){
            areaValidationLabel.setText("Area code is incorrect");
            areaErrors =true;
        }else{
            areaValidationLabel.setText(null);
            areaErrors =false;
        }
    }//GEN-LAST:event_areaCodeTextKeyReleased

    private void emailTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_emailTextKeyReleased
           String PATTERN = "^[a-zA-Z0-9]{5,30}[@][a-zA-Z0-9]{1,10}[.][a-zA-Z]{2,5}$"; //"[a-zA-Z0-9_.-]+[@][a-z]+[.][a-z]+"
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match= patt.matcher(emailText.getText());
        if (!match.matches() || emailText.getText().equals("")){
            emailValidationLabel.setText("Email is incorrect");
            emailErrors = true;
        }else{
            emailValidationLabel.setText(null);
               emailErrors = false;
        }
    }//GEN-LAST:event_emailTextKeyReleased

    private void passwordTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordTextKeyReleased
        if ( passwordText.getText().equals("")){
            passwordValidationLabel.setText("Password cannot be empty");
            passwordErrors = true;
        }else{
            passwordValidationLabel.setText(null);
               passwordErrors = false;
        }
    }//GEN-LAST:event_passwordTextKeyReleased

    private void confirmPasswordTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_confirmPasswordTextKeyReleased
  if ( confirmPasswordText.getText().equals("")){
            confirmpasswordValidationLabel.setText("Password cannot be empty");
            confirmPasswordErrors = true;
        }else{
            confirmpasswordValidationLabel.setText(null);
               confirmPasswordErrors = false;
        }
    }//GEN-LAST:event_confirmPasswordTextKeyReleased
public static boolean isNumeric(String str) {
    if (str == null) {
        return false;
    }
    try 
    {
        double d = Double.parseDouble(str);
    } 
    catch (NumberFormatException nf) 
    {
        return false;
    }
    return true;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistrationForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistrationForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistrationForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistrationForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//               // RegistrationForm dialog = new RegistrationForm(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField areaCodeText;
    private javax.swing.JLabel areaValidationLabel;
    private javax.swing.JTextField cityText;
    private javax.swing.JLabel cityValidationLabel;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton closeButton;
    private javax.swing.JPasswordField confirmPasswordText;
    private javax.swing.JLabel confirmpasswordValidationLabel;
    private javax.swing.JTextField emailText;
    private javax.swing.JLabel emailValidationLabel;
    private javax.swing.JTextField houseText;
    private javax.swing.JLabel houseValidationLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField nameText;
    private javax.swing.JLabel nameValidationLabel;
    private javax.swing.JPasswordField passwordText;
    private javax.swing.JLabel passwordValidationLabel;
    private javax.swing.JTextField phnumberText;
    private javax.swing.JLabel phoneValidationLabel;
    private javax.swing.JTextField streetText;
    private javax.swing.JLabel streetValidationLabel;
    private javax.swing.JButton submitButton;
    private javax.swing.JTextField surnameText;
    private javax.swing.JLabel surnameValidationLabel;
    // End of variables declaration//GEN-END:variables
}
